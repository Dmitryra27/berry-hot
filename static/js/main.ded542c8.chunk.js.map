{"version":3,"sources":["components/CardImage.js","components/common.js","components/BuyButton.js","components/PriceButton.js","components/CardPreview.js","pages/Discover.js","pages/Home.js","components/Card.js","pages/Card.js","pages/Account.js","pages/Stats.js","pages/Recent.js","App.js","index.js","images/logo.png","images/tomato.png","images/avocado.gif"],"names":["loadedCards","loadedImages","cardPreloading","preloadCard","cardId","Promise","resolve","Image","onload","onerror","e","src","CardImage","props","useState","cardImage","setCardImage","loading","setLoading","badCard","setBadCard","canvasEl","useRef","cardReady","useEffect","then","current","getContext","drawImage","className","LoadingCard","alt","BrokenCard","ref","width","height","multiplier","duration","Date","getTime","Math","pow","fromNear","s","parseFloat","BuyButton","price","a","preventDefault","_near","contract","buy_card","card_id","Big","toFixed","appCommission","artDaoProfit","ownerPrice","ownerId","newPrice","disabled","signedIn","onClick","buyCard","PriceButton","to","CardPreview","rating","setRating","propsRating","fetchRating","useCallback","get_rating","connected","role","DiscoverPage","feed","setFeed","hasMore","setHasMore","uuid","gkey","fetchMore","f","lastKey","length","get_top","from_key","limit","fetched","push","cards","map","key","loader","pageStart","loadMore","HomePage","leftReady","setLeftReady","rightReady","setRightReady","votingPromise","voteRequest","requests","slice","forEach","nextRequest","left","right","vote","response","popRequest","tgas","newRequest","iter","request","toString","msg","console","warn","indexOf","refreshAllowance","addRecentCard","addRequest","recentCards","mapCardInfo","c","owner_id","purchasePrice","purchase_price","purchaseTime","purchase_time","volume","art_dao_profit","numTrades","num_trades","Card","cardInfo","setCardInfo","refreshTime","hidden","fetchInfo","get_card_info","signedAccountId","datetime","CardPage","useParams","parseInt","AccountPage","accountId","account","setAccount","cardIds","setCardsIds","fetchCards","getAccount","sort","b","numCards","purchaseVolume","numPurchases","saleProfit","numSales","numVotes","StatsPage","stats","setStats","fetchStats","all","get_trade_data","get_num_accounts","t","numAccounts","num_purchases","numUniqueCardsBought","num_unique_cards_bought","nearVolume","near_volume","app_owner_profit","appOwnerId","app_owner_id","artDaoId","art_dao_id","totalVotes","total_votes","href","RecentPage","offset","get_recent_cards","seen","filter","NearConfig","window","location","hostname","networkId","nodeUrl","archivalNodeUrl","contractName","walletUrl","mapAccount","num_cards","purchase_volume","sale_profit","num_sales","num_votes","App","lsKey","lsKeyRecentCards","state","isNavCollapsed","ls","get","_initNear","setState","keyStore","nearAPI","BrowserLocalStorageKeyStore","Object","assign","deps","near","this","walletConnection","getAccountId","viewMethods","changeMethods","accounts","get_account","account_id","cardFetching","promises","i","get_account_cards","from_index","flat","register_account","requestSignIn","signOut","_accountId","r","index","splice","unshift","set","alert","logOut","passProps","updateState","header","aria-hidden","basename","process","title","Logo","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","data-ribbon","exact","path","Recent","Stats","Account","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ded542c8.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport BrokenCard from \"../images/tomato.png\"\nimport LoadingCard from \"../images/avocado.gif\"\n\nconst loadedCards = {};\nconst loadedImages = {};\nconst cardPreloading = {};\n\nfunction preloadCard(cardId) {\n  if (cardId in cardPreloading) {\n    return cardPreloading[cardId];\n  }\n  return cardPreloading[cardId] = new Promise((resolve) => {\n    loadedImages[cardId] = new Image();\n    loadedImages[cardId].onload = () => {\n      loadedCards[cardId] = true;\n      resolve()\n    }\n    loadedImages[cardId].onerror = (e) => {\n      loadedCards[cardId] = false;\n      resolve()\n    }\n    loadedImages[cardId].src = `https://i.berry.cards/${cardId}`;\n  });\n\n}\n\nfunction CardImage(props) {\n  const [cardImage, setCardImage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [badCard, setBadCard] = useState(false);\n  const canvasEl = useRef(null);\n\n  const cardReady = props.cardReady;\n  const cardId = props.cardId;\n\n  useEffect(() => {\n    setLoading(true);\n    setCardImage(null);\n    cardReady(false);\n    setBadCard(false);\n    preloadCard(cardId).then(() => {\n      setBadCard(!loadedCards[cardId]);\n      setLoading(false);\n      if (loadedCards[cardId]) {\n        cardReady(true);\n        setCardImage(loadedImages[cardId]);\n      }\n    });\n  }, [cardId, cardReady, canvasEl])\n\n  useEffect(() => {\n    if (canvasEl.current && cardImage) {\n      const ctx = canvasEl.current.getContext('2d');\n      ctx.drawImage(cardImage, 0, 0);\n    }\n  }, [cardImage])\n\n  return (\n    <div>\n      {loading ? (\n        <img className={props.className} src={LoadingCard} alt={`The card #${cardId} is loading`}/>\n      ) : badCard ? (\n        <img className={props.className} src={BrokenCard} alt={`The card #${cardId} is broken`}/>\n      ): (\"\")}\n      <canvas\n        className={`${props.className}${(!cardImage || loading || badCard) ? \" d-none\": \"\"}`}\n        ref={canvasEl}\n        width={400}\n        height={400}\n        alt={`Card #${cardId}`}\n      />\n    </div>\n  )\n}\n\nexport { preloadCard, CardImage };\n","const InflationTimestamp = 1621623768597;\nconst HalflifeDuration = 2628000000;\n\nexport const multiplier = () => {\n  const timestamp = new Date().getTime();\n  const duration = timestamp - InflationTimestamp;\n  return Math.pow(2, duration / HalflifeDuration);\n}\n","import React from 'react';\nimport {multiplier} from \"./common\";\nimport Big from \"big.js\";\n\nconst fromNear = (s) => parseFloat(s) / 1e24;\n\nfunction BuyButton(props) {\n  const price = fromNear(props.price / multiplier() * 1.0001);\n\n  async function buyCard(e) {\n    e.preventDefault();\n    await props._near.contract.buy_card({card_id: props.cardId}, \"200000000000000\", Big(props.price / multiplier() * 1.0001).toFixed(0));\n  }\n\n  const appCommission = price / 100;\n  let artDaoProfit = price / 100;\n  let ownerPrice = price - appCommission - artDaoProfit;\n  if (!props.ownerId) {\n    artDaoProfit += ownerPrice;\n    ownerPrice = 0;\n  }\n\n  const newPrice = price * 1.2;\n\n  return (\n    <div>\n      <button\n        className=\"btn btn-success\"\n        disabled={!props.signedIn}\n        onClick={(e) => buyCard(e)}\n      >\n        Buy for {price.toFixed(2)} NEAR\n      </button>\n      <div className=\"text-muted text-start\">\n        Price breakdown:\n        <ul>\n          {props.ownerId && (\n            <li>Owner @{props.ownerId} will get {ownerPrice.toFixed(2)} NEAR</li>\n          )}\n          <li>Art DAO will get {artDaoProfit.toFixed(2)} NEAR</li>\n          <li>1% App commission is {appCommission.toFixed(2)} NEAR</li>\n        </ul>\n        <p>\n          The new price will be {newPrice.toFixed(2)} NEAR\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport { fromNear, BuyButton };\n","import React from 'react';\nimport {fromNear} from \"./BuyButton\";\nimport {Link} from \"react-router-dom\";\nimport {multiplier} from \"./common\";\n\nfunction PriceButton(props) {\n  return (\n    <div>\n      <Link\n        to={`/c/${props.cardId}`}\n        className=\"btn btn-success\" disabled={!props.signedIn}\n      >\n        {fromNear(props.price / multiplier()).toFixed(2)} NEAR\n      </Link>\n    </div>\n  );\n}\n\nexport default PriceButton;\n","import \"./CardPreview.scss\"\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {CardImage} from \"./CardImage\";\nimport {Link} from \"react-router-dom\";\nimport PriceButton from \"./PriceButton\";\n\nfunction CardPreview(props) {\n  const [rating, setRating] = useState(props.rating);\n  const cardId = props.cardId;\n  const propsRating = props.rating;\n\n  const fetchRating = useCallback(async () => {\n    return await props._near.contract.get_rating({\n      card_id: cardId,\n    })\n  }, [props._near, cardId])\n\n  useEffect(() => {\n    if (props.connected) {\n      if (!propsRating) {\n        fetchRating().then(setRating)\n      } else {\n        setRating(propsRating)\n      }\n    }\n  }, [props.connected, propsRating, fetchRating])\n\n  return props.cardId ? (\n    <div className=\"card card-preview m-2\">\n      <Link to={`/c/${cardId}`}>\n        <CardImage className=\"card-img-top\" cardId={cardId} cardReady={() => false}/>\n      </Link>\n      <div className=\"card-body\">\n        #{cardId}\n      </div>\n      <div className=\"card-footer text-center\">\n        <PriceButton {...props} cardId={cardId} price={rating} />\n      </div>\n    </div>\n  ) : (\n    <div className=\"card card-preview m-2\">\n     <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-grow\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CardPreview;\n","import \"./Discover.scss\";\nimport React, { useEffect, useState} from 'react';\nimport uuid from \"react-uuid\";\nimport CardPreview from \"../components/CardPreview\";\nimport InfiniteScroll from 'react-infinite-scroller';\n\nconst FetchLimit = 25;\n\nfunction DiscoverPage(props) {\n  const [feed, setFeed] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [gkey] = useState(uuid())\n\n  const fetchMore = async () => {\n    const f = [...feed];\n    const lastKey = f.length > 0 ? f[f.length - 1] : null\n    const fetched = await props._near.contract.get_top({\n      from_key: lastKey,\n      limit: FetchLimit,\n    });\n    f.push(...fetched);\n    if (fetched.length === 0) {\n      setHasMore(false);\n    }\n    setFeed(f);\n  };\n\n  useEffect(() => {\n    if (props.connected) {\n      setHasMore(true);\n    }\n  }, [props.connected])\n\n  const cards = feed.map(([rating, cardId]) => {\n    const key = `${gkey}-${cardId}`;\n    return (\n      <CardPreview {...props} key={key} cardId={cardId} rating={rating} />\n    );\n  })\n\n  const loader = (\n    <div className=\"d-flex justify-content-center\" key={`${gkey}-loader`}>\n      <div className=\"spinner-grow\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col\">\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={fetchMore}\n              hasMore={hasMore}\n              loader={loader}\n            >\n              {cards}\n            </InfiniteScroll>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DiscoverPage;\n","import \"./Home.scss\";\nimport React, {useState} from 'react';\nimport { CardImage, preloadCard } from \"../components/CardImage\";\nimport CardPreview from \"../components/CardPreview\";\nimport uuid from \"react-uuid\";\n\nconst SelectedLeft = \"SelectedLeft\";\nconst SelectedRight = \"SelectedRight\";\nconst Skipped = \"Skipped\";\n\nconst DefaultTGas = 100;\nconst ExtraTGas = 50;\nconst NumIter = 5;\n\n  function HomePage(props) {\n  const [leftReady, setLeftReady] = useState(false);\n  const [rightReady, setRightReady] = useState(false);\n  const [votingPromise] = useState(Promise.resolve());\n  const [gkey] = useState(uuid())\n\n  const voteRequest = props.requests ? props.requests[0] : null;\n\n  if (props.requests) {\n    props.requests.slice(1).forEach((nextRequest) => {\n      preloadCard(nextRequest.left);\n      preloadCard(nextRequest.right);\n    });\n  }\n\n  const vote = async (e, voteRequest, response) => {\n    e.preventDefault();\n    if (response === SelectedLeft && !leftReady) {\n      return;\n    }\n    if (response === SelectedRight && !rightReady) {\n      return;\n    }\n    props.popRequest();\n    votingPromise.then(async () => {\n      let tgas = DefaultTGas;\n      let newRequest = null\n      for (let iter = 0; iter < NumIter; ++iter) {\n        try {\n          newRequest = await props._near.contract.vote({\n            request: voteRequest,\n            response,\n          }, tgas.toString() + \"000000000000\");\n        } catch (e) {\n          const msg = e.toString();\n          console.warn(msg);\n          if (msg.indexOf(\"prepaid gas\") !== -1) {\n            tgas += ExtraTGas;\n            continue\n          }\n          if (msg.indexOf(\"does not have enough balance\") !== -1) {\n            await props.refreshAllowance();\n            return;\n          }\n        }\n        break;\n      }\n      if (newRequest) {\n        if (response === SelectedLeft || response === SelectedRight) {\n          const cardId = response === SelectedLeft ? voteRequest.left : voteRequest.right;\n          props.addRecentCard(cardId);\n        }\n        props.addRequest(newRequest);\n      }\n    });\n  }\n\n  const cards = props.recentCards.map((cardId) => {\n    const key = `${gkey}-${cardId}`;\n    return (\n      <CardPreview {...props} key={key} cardId={cardId} />\n    );\n  })\n\n  return (\n    <div>\n      <div className=\"container\">\n        {voteRequest ? (\n          <div>\n            <h3>Vote</h3>\n            <div className=\"row justify-content-md-center mb-3\">\n              <div className=\"col col-sm-6\">\n                <div\n                  className={`card-picker${!leftReady ? \" disabled\": \"\"}`}\n                  onClick={(e) => vote(e, voteRequest, SelectedLeft)}\n                >\n                  <CardImage className=\"img-fluid\" cardId={voteRequest.left} cardReady={setLeftReady}/>\n                </div>\n              </div>\n              <div className=\"col col-sm-6\">\n                <div\n                  className={`card-picker${!rightReady ? \" disabled\": \"\"}`}\n                  onClick={(e) => vote(e, voteRequest, SelectedRight)}\n                >\n                  <CardImage className=\"img-fluid\" cardId={voteRequest.right} cardReady={setRightReady}/>\n                </div>\n              </div>\n            </div>\n            <div className=\"row justify-content-md-center mb-3\">\n              <button\n                className=\"btn btn-lg btn-danger\"\n                onClick={(e) => vote(e, voteRequest, Skipped)}\n              >Skip both cards</button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-grow\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n        )}\n        <div className=\"row justify-content-md-center mb-3\">\n          {(cards.length > 0) && (\n            <div>\n              <h3>Recent votes</h3>\n              {cards}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {BuyButton, fromNear} from \"./BuyButton\";\nimport {CardImage, preloadCard} from \"./CardImage\";\nimport TimeAgo from \"timeago-react\";\nimport {Link} from \"react-router-dom\";\nimport PriceButton from \"./PriceButton\";\n\nconst mapCardInfo = (c) => {\n  return c ? {\n    ownerId: c.owner_id,\n    purchasePrice: fromNear(c.purchase_price),\n    purchaseTime: new Date(parseFloat(c.purchase_time) / 1e6),\n    volume: fromNear(c.volume),\n    artDaoProfit: fromNear(c.art_dao_profit),\n    numTrades: c.num_trades,\n  } : {\n    ownerId: null,\n    purchasePrice: 0,\n    purchaseTime: null,\n    volume: 0,\n    artDaoProfit: 0,\n    numTrades: 0,\n  };\n}\n\nfunction Card(props) {\n  const [cardInfo, setCardInfo] = useState(null);\n  const cardId = props.cardId;\n  const refreshTime = props.refreshTime;\n  const hidden = props.hidden;\n\n  const fetchInfo = useCallback(async () => {\n    const rating = await props._near.contract.get_rating({\n      card_id: cardId,\n    })\n    const cardInfo = mapCardInfo(await props._near.contract.get_card_info({\n      card_id: cardId,\n    }));\n    cardInfo.refreshTime = refreshTime;\n    cardInfo.rating = rating;\n    return cardInfo;\n  }, [props._near, cardId, refreshTime])\n\n  useEffect(() => {\n    if (props.connected && !hidden) {\n      preloadCard(cardId);\n      fetchInfo().then(setCardInfo)\n    }\n  }, [props.connected, fetchInfo, cardId, hidden])\n\n  return cardInfo ? (\n    <div className=\"card m-2\">\n      <CardImage className=\"card-img-top\" cardId={cardId} cardReady={() => false}/>\n      <div className=\"card-body text-start\">\n        <h3>#{cardId}</h3>\n        {cardInfo.ownerId ? (\n          <div>\n            <p>\n              Owned by {cardInfo.ownerId === props.signedAccountId ? \"you\" : (\n                <Link to={`/a/${cardInfo.ownerId}`}>@{cardInfo.ownerId}</Link>\n              )}<br/>\n              Purchased <TimeAgo datetime={cardInfo.purchaseTime} /> for {cardInfo.purchasePrice.toFixed(2)} NEAR<br/>\n            </p>\n            <p>\n              Total card volume {cardInfo.volume.toFixed(2)} NEAR<br/>\n              Art DAO got {cardInfo.artDaoProfit.toFixed(2)} NEAR<br/>\n            </p>\n          </div>\n        ) : (\n          <div>\n            <p>\n              Not owned by anyone.\n            </p>\n          </div>\n        )}\n      </div>\n      <div className=\"card-footer text-center\">\n        {cardInfo.ownerId === props.signedAccountId ? (\n          <PriceButton {...props} cardId={cardId} price={cardInfo.rating} />\n        ) : (\n          <BuyButton {...props} cardId={cardId} price={cardInfo.rating} ownerId={cardInfo.ownerId} />\n        )}\n      </div>\n    </div>\n  ) : (\n    <div className=\"card m-2\">\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-grow\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport {useParams} from \"react-router\";\nimport Card from \"../components/Card\";\n\nfunction CardPage(props) {\n  const { cardId } = useParams();\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col col-12 col-lg-8 col-xl-6\">\n          <Card {...props} cardId={parseInt(cardId)} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CardPage;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport CardPreview from \"../components/CardPreview\";\nimport uuid from \"react-uuid\";\n\nfunction AccountPage(props) {\n  const { accountId } = useParams();\n  const [account, setAccount] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [cardIds, setCardsIds] = useState([]);\n  const [gkey] = useState(uuid());\n\n  const fetchCards = useCallback(async () => {\n    const account = await props._near.getAccount(accountId);\n    if (!account) {\n      return;\n    }\n    setAccount(account);\n    return await account.fetchCards();\n  }, [props._near, accountId])\n\n  useEffect(() => {\n    if (props.connected) {\n      fetchCards().then((cardIds) => {\n        cardIds.sort((a, b) => b[1] - a[1]);\n        setCardsIds(cardIds);\n        setLoading(false);\n      })\n    }\n  }, [props.connected, fetchCards])\n\n  const cards = cardIds.map(([cardId, rating]) => {\n    const key = `${gkey}-${cardId}`;\n    return (\n      <CardPreview {...props} key={key} cardId={cardId} rating={rating} />\n    );\n  })\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        {loading ? (\n          <div className=\"col\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"spinner-grow\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"col \">\n            <h3>{accountId === props.signedAccountId ? \"Your cards\" : `Cards owned by @${accountId}`}</h3>\n            <div>\n              {cards}\n            </div>\n          </div>\n        )}\n        {!account ? (\n          <div className=\"col col-12 col-lg-8 col-xl-6\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"spinner-grow\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"col col-12 col-lg-4 col-xl-4\">\n            <h3>Stats</h3>\n            <ul>\n              <li>Num cards: {account.numCards}</li>\n              <li>Purchase volume: {account.purchaseVolume.toFixed(2)} NEAR</li>\n              <li>Num purchases: {account.numPurchases}</li>\n              <li>Sale profit: {account.saleProfit.toFixed(2)} NEAR</li>\n              <li>Num sales: {account.numSales}</li>\n              <li>Num votes: {account.numVotes}</li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AccountPage;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {fromNear} from \"../components/BuyButton\";\n\nfunction StatsPage(props) {\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchStats = useCallback(async () => {\n    const [t, numAccounts] = await Promise.all([\n      props._near.contract.get_trade_data(),\n      props._near.contract.get_num_accounts(),\n    ]);\n    return {\n      numAccounts,\n      numPurchases: t.num_purchases,\n      numUniqueCardsBought: t.num_unique_cards_bought,\n      nearVolume: fromNear(t.near_volume),\n      appCommission: fromNear(t.app_owner_profit),\n      artDaoProfit: fromNear(t.art_dao_profit),\n      appOwnerId: t.app_owner_id,\n      artDaoId: t.art_dao_id,\n      totalVotes: t.total_votes,\n    };\n  }, [props._near])\n\n  useEffect(() => {\n    if (props.connected) {\n      fetchStats().then((stats) => {\n        setStats(stats);\n        setLoading(false);\n      })\n    }\n  }, [props.connected, fetchStats])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {loading ? (\n          <div className=\"col\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"spinner-grow\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"col col-12 col-lg-6 col-xl-6\">\n            <h3>Global Stats</h3>\n            <ul>\n              <li>Num accounts: {stats.numAccounts}</li>\n              <li>Total votes: {stats.totalVotes}</li>\n              <li>Total purchases: {stats.numPurchases}</li>\n              <li>Total unique purchases: {stats.numUniqueCardsBought}</li>\n              <li>Total volume: {stats.nearVolume.toFixed(2)} NEAR</li>\n              <li>Total Art DAO profit: {stats.artDaoProfit.toFixed(2)} NEAR</li>\n              <li>Art DAO account ID: <a href={`https://explorer.near.org/accounts/${stats.artDaoId}`}>@{stats.artDaoId}</a></li>\n              <li>Total App commission: {stats.appCommission.toFixed(2)} NEAR</li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StatsPage;\n","import \"./Discover.scss\";\nimport React, { useEffect, useState} from 'react';\nimport uuid from \"react-uuid\";\nimport CardPreview from \"../components/CardPreview\";\nimport InfiniteScroll from 'react-infinite-scroller';\n\nconst FetchLimit = 100;\n\nfunction RecentPage(props) {\n  const [feed, setFeed] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [gkey] = useState(uuid())\n\n  const fetchMore = async () => {\n    const f = [...feed];\n    const offset = f.length;\n    const fetched = await props._near.contract.get_recent_cards({\n      offset,\n      limit: FetchLimit,\n    });\n    f.push(...fetched);\n    if (fetched.length === 0) {\n      setHasMore(false);\n    }\n    setFeed(f);\n  };\n\n  useEffect(() => {\n    if (props.connected) {\n      setHasMore(true);\n    }\n  }, [props.connected])\n\n  const seen = {};\n\n  const cards = feed.filter(([rating, cardId]) => {\n    if (cardId in seen) {\n      return false;\n    }\n    seen[cardId] = true;\n    return true;\n  }).map(([rating, cardId]) => {\n    const key = `${gkey}-${cardId}`;\n    return (\n      <CardPreview {...props} key={key} cardId={cardId} rating={rating} />\n    );\n  })\n\n  const loader = (\n    <div className=\"d-flex justify-content-center\" key={`${gkey}-loader`}>\n      <div className=\"spinner-grow\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col\">\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={fetchMore}\n              hasMore={hasMore}\n              loader={loader}\n            >\n              {cards}\n            </InfiniteScroll>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RecentPage;\n","import React from 'react';\nimport \"error-polyfill\";\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.scss\";\nimport './gh-fork-ribbon.css';\nimport * as nearAPI from 'near-api-js'\nimport Logo from \"./images/logo.png\"\nimport DiscoverPage from \"./pages/Discover\";\nimport HomePage from \"./pages/Home\";\nimport {HashRouter as Router, Link, Route, Switch} from 'react-router-dom'\nimport {fromNear} from \"./components/BuyButton\";\nimport ls from \"local-storage\";\nimport CardPage from \"./pages/Card\";\nimport AccountPage from \"./pages/Account\";\nimport StatsPage from \"./pages/Stats\";\nimport RecentPage from \"./pages/Recent\";\n\nconst IsMainnet = window.location.hostname === \"berry.cards\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1621626423763-23601795253740',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org',\n  contractName: 'cards.berryclub.ek.near',\n  walletUrl: 'https://wallet.near.org',\n};\n\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nconst FetchLimit = 50;\n\nconst mapAccount = (a) => {\n  return {\n    requests: a.requests,\n    numCards: a.num_cards,\n    purchaseVolume: fromNear(a.purchase_volume),\n    numPurchases: a.num_purchases,\n    saleProfit: fromNear(a.sale_profit),\n    numSales: a.num_sales,\n    numVotes: a.num_votes,\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._near = {};\n\n    this._near.lsKey = NearConfig.contractName + ':v01:';\n    this._near.lsKeyRecentCards = this._near.lsKey + \"recentCards\";\n\n    this.state = {\n      connected: false,\n      isNavCollapsed: true,\n      account: null,\n      requests: null,\n      recentCards: ls.get(this._near.lsKeyRecentCards) || [],\n    };\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true,\n      });\n    });\n  }\n\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    this._near.keyStore = keyStore;\n    this._near.near = near;\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._near.accountId = this._near.walletConnection.getAccountId();\n\n    this._near.account = this._near.walletConnection.account();\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_account', 'get_num_accounts', 'get_accounts', 'get_num_cards', 'get_top', 'get_rating', 'get_trade_data', 'get_card_info', 'get_account_cards', 'get_recent_cards'],\n      changeMethods: ['register_account', 'vote', 'buy_card'],\n    });\n\n    this._near.accounts = {};\n\n    this._near.getAccount = (accountId) => {\n      if (accountId in this._near.accounts) {\n        return this._near.accounts[accountId];\n      }\n      return this._near.accounts[accountId] = Promise.resolve((async () => {\n        const a = await this._near.contract.get_account({account_id: accountId});\n        const account = a ? mapAccount(a) : null;\n        if (account) {\n          account.fetchCards = () => {\n            if (account.cardFetching) {\n              return account.cardFetching;\n            }\n            const promises = [];\n            for (let i = 0; i < account.numCards; i += FetchLimit) {\n              promises.push(this._near.contract.get_account_cards({\n                account_id: accountId,\n                from_index: i,\n                limit: FetchLimit,\n              }));\n            }\n            return account.cardFetching = Promise.resolve((async () => {\n              return (await Promise.all(promises)).flat();\n            })());\n          };\n        }\n        return account;\n      })());\n    };\n\n    if (this._near.accountId) {\n      let account = await this._near.getAccount(this._near.accountId);\n      if (account === null) {\n        await this._near.contract.register_account();\n        delete this._near.accounts[this._near.accountId];\n        account = await this._near.getAccount(this._near.accountId);\n      }\n      this.setState({\n        account,\n        requests: account.requests,\n      });\n    }\n  }\n\n  async requestSignIn(e) {\n    e && e.preventDefault();\n    const appTitle = 'Berry Cards';\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false;\n  }\n\n  async logOut() {\n    this._near.walletConnection.signOut();\n    this._near.accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId,\n    })\n  }\n\n  popRequest(c) {\n    const requests = this.state.requests.slice(1);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRequest(r, c) {\n    const requests = this.state.requests.slice(0);\n    requests.push(r);\n    this.setState({\n      requests,\n    }, c);\n  }\n\n  addRecentCard(cardId) {\n    let recentCards = this.state.recentCards.slice(0);\n    const index = recentCards.indexOf(cardId);\n    if (index !== -1) {\n      recentCards.splice(index, 1);\n    }\n    recentCards.unshift(cardId);\n    recentCards = recentCards.slice(0, 5);\n    ls.set(this._near.lsKeyRecentCards, recentCards);\n    this.setState({\n      recentCards\n    })\n  }\n\n  async refreshAllowance() {\n    alert(\"You're out of access key allowance. Need sign in again to refresh it\");\n    await this.logOut();\n    await this.requestSignIn();\n  }\n\n  render() {\n    const passProps = {\n      _near: this._near,\n      updateState: (s, c) => this.setState(s, c),\n      popRequest: (c) => this.popRequest(c),\n      addRequest: (r, c) => this.addRequest(r, c),\n      addRecentCard: (cardId) => this.addRecentCard(cardId),\n      refreshAllowance: () => this.refreshAllowance(),\n      ...this.state\n    };\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        <button\n          className=\"btn btn-outline-secondary\"\n          onClick={() => this.logOut()}>Sign out ({this.state.signedAccountId})</button>\n      </div>\n    ) : (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={(e) => this.requestSignIn(e)}>Sign in with NEAR Wallet</button>\n      </div>\n    ));\n\n    return (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-3\">\n            <div className=\"container-fluid\">\n              <Link className=\"navbar-brand\" to=\"/\" title=\"NEAR.fm\">\n                <img src={Logo} alt=\"Berry Cards\" className=\"d-inline-block align-middle\" />\n                Berry Cards\n              </Link>\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                      data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" aria-current=\"page\" to=\"/recent\">Recent</Link>\n                  </li>\n                  {this.state.signedIn && (\n                    <li className=\"nav-item\">\n                      <Link className=\"nav-link\" aria-current=\"page\" to=\"/top\">Top</Link>\n                    </li>\n                  )}\n                  {this.state.signedIn && (\n                    <li className=\"nav-item\">\n                      <Link className=\"nav-link\" aria-current=\"page\"\n                            to={`/a/${this.state.signedAccountId}`}>Profile</Link>\n                    </li>\n                  )}\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" aria-current=\"page\" to=\"/stats\">Stats</Link>\n                  </li>\n                </ul>\n                <form className=\"d-flex\">\n                  {header}\n                </form>\n              </div>\n            </div>\n          </nav>\n\n          <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/berry-hot\" data-ribbon=\"Fork me on GitHub\"\n             title=\"Fork me on GitHub\">Fork me on GitHub</a>\n\n          <Switch>\n            <Route exact path={\"/\"}>\n              {this.state.signedIn ? (\n                <HomePage {...passProps}/>\n              ) : (\n                <DiscoverPage {...passProps}/>\n              )}\n            </Route>\n            <Route exact path={\"/recent\"}>\n              <RecentPage {...passProps}/>\n            </Route>\n            <Route exact path={\"/top\"}>\n              <DiscoverPage {...passProps}/>\n            </Route>\n            <Route exact path={\"/stats\"}>\n              <StatsPage {...passProps}/>\n            </Route>\n            <Route exact path={\"/a/:accountId\"}>\n              <AccountPage {...passProps} />\n            </Route>\n            <Route exact path={\"/c/:cardId\"}>\n              <CardPage {...passProps} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.272328f4.png\";","module.exports = __webpack_public_path__ + \"static/media/tomato.9239fac3.png\";","module.exports = __webpack_public_path__ + \"static/media/avocado.f0698336.gif\";"],"sourceRoot":""}